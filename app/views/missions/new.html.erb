<h2>Start new mission</h2>
<!--
          <textarea id="newMsg" data-bind="value: nextLogEntry, hasfocus: focusForm, event: { keyup
: cancelScroll }, css: { errInput: nextLogErrors().message }, ctrlEnter: doSave" style="width:40em;
 height:4em;"></textarea><br/>
message"></div>
-->

<table>
<tr><td><label for="txtTitle">Title</label></td>
  <td><input id="txtTitle" type="text" data-bind="value:mission.title, css: { errInput: errors().title }"/>
<span data-bind="visible: errors().title, text: errors().title" class="fieldErr"></span></td></tr>

<tr><td><label for="txtWhen">Started</label></td>
<td><input id="txtWhen" type="text" data-bind="value:mission.started.formatted, css: {errInput: errors().started }"/>
<span data-bind="visible: errors().started, text: errors().started" class="fieldErr"></span></td></tr>

<tr><td><label for="txtNumber">DEM#</label></td>
<td><input id="txtNumber" type="text" data-bind="value:mission.number, css:{errInput:errors().number}"/>
<span data-bind="visible: errors().number, txt: errors().number" class="fieldErr"></span></td></tr>
</table>
<button data-bind="click:doSave">Start</button>

<script type="text/javascript">
var MissionModel = function(apiModel)
{
  var self = this;
  this.id = apiModel.id
  this.started = ko.observable(apiModel.started ? new XDate(apiModel.started, true) : undefined)
  this.title = ko.observable(apiModel.title)
  this.number = ko.observable(apiModel.number)

  this.started.formatted = ko.computed({
    read: function() { return this.started() ? this.started().toString("yyyy-MM-dd HH:mm") : ""; },
    write: function(value) { this.started(new XDate(value)); },
		owner: this
  });
}

var PageModel = function()
{
  var self = this;
  this.mission = new MissionModel({});
  this.mission.started(new XDate().setMinutes(Math.round((new XDate().getMinutes() - 15) / 30) * 30))
  this.errors = ko.observable({});

  this.doSave = function()
  {
    self.errors({})
    $.ajax({ type: 'POST', url: siteRoot + 'missions.json', data: '{"mission": '+ko.toJSON(self.mission)+'}', dataType: 'JSON', contentType:'application/json; charset=utf-8'})
    .done(function(result) {
      window.location.href = siteRoot;
    })
    .fail(function(jhr) {
      if (jhr.status == 422) {
        self.errors($.parseJSON(jhr.responseText));
      }
      else { alert('General Error: ' + jhr.responseText); }
    })
    ;
  }
}

var model;
$(document).ready(function() {
  model = new PageModel();
  ko.applyBindings(model);
});

</script>
